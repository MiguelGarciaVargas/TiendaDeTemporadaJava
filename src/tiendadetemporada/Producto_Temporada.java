/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tiendadetemporada;

import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.JOptionPane;
import java.text.SimpleDateFormat;
import java.util.Locale;

/**
 *
 * @author migue
 */
public class Producto_Temporada extends javax.swing.JFrame {

    private long selectedID = -1;
    private java.util.Map<String, Long> mapProductos = new java.util.HashMap<>();
    private java.util.Map<String, Long> mapTemporadas = new java.util.HashMap<>();

    public Producto_Temporada() {
        initComponents();
        cargarTablaProductoTemporada();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableTemporada = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButtonEliminar = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jButtonAgregar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxProducto1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxTemporada = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TableTemporada.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        TableTemporada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "IdProducto", "IdTemporafa", "Producto", "Temporada"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableTemporada.setColumnSelectionAllowed(true);
        TableTemporada.setGridColor(new java.awt.Color(255, 255, 255));
        TableTemporada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableTemporadaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableTemporada);
        TableTemporada.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 38)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Producto - Temporada");
        jLabel1.setToolTipText("");

        jButtonEliminar.setBackground(new java.awt.Color(0, 102, 255));
        jButtonEliminar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonEliminar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonEditar.setBackground(new java.awt.Color(0, 102, 255));
        jButtonEditar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonEditar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonEditar.setText("Editar");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jButtonAgregar.setBackground(new java.awt.Color(0, 102, 255));
        jButtonAgregar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonAgregar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAgregar.setText("Agregar");
        jButtonAgregar.setName(""); // NOI18N
        jButtonAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAgregarMouseClicked(evt);
            }
        });
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 255));
        jLabel6.setText("Producto:");

        jComboBoxProducto1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxProducto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxProducto1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 255));
        jLabel3.setText("Temporada:");

        jComboBoxTemporada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(367, 367, 367)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(140, 140, 140)
                        .addComponent(jButtonEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(140, 140, 140)
                        .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxProducto1, 0, 218, Short.MAX_VALUE)
                            .addComponent(jComboBoxTemporada, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBoxProducto1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxTemporada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TableTemporadaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableTemporadaMouseClicked
        int fila = TableTemporada.getSelectedRow();
        if (fila >= 0) {
            selectedID = Long.parseLong(TableTemporada.getValueAt(fila, 0).toString()); // ID de relación

            long idProducto = Long.parseLong(TableTemporada.getValueAt(fila, 1).toString());
            long idTemporada = Long.parseLong(TableTemporada.getValueAt(fila, 2).toString());

            // Buscar y seleccionar producto
            for (String key : mapProductos.keySet()) {
                if (mapProductos.get(key).equals(idProducto)) {
                    jComboBoxProducto1.setSelectedItem(key);
                    break;
                }
            }

            // Buscar y seleccionar temporada
            for (String key : mapTemporadas.keySet()) {
                if (mapTemporadas.get(key).equals(idTemporada)) {
                    jComboBoxTemporada.setSelectedItem(key);
                    break;
                }
            }
        }

    }//GEN-LAST:event_TableTemporadaMouseClicked

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        if (selectedID == -1) {
            JOptionPane.showMessageDialog(null, "Selecciona una fila");
            return;
        }

        try {
            Connection con = Conexion.conectar();
            String sql = "DELETE FROM ProductoInfo.Producto_Temporada WHERE id_producto_temporada = ?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setLong(1, selectedID);
            ps.executeUpdate();
            con.close();

            JOptionPane.showMessageDialog(null, "Eliminado correctamente");
            cargarTablaProductoTemporada();
            selectedID = -1;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al eliminar");
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        if (selectedID == -1) {
            JOptionPane.showMessageDialog(null, "Selecciona una relación");
            return;
        }

        String productoKey = (String) jComboBoxProducto1.getSelectedItem();
        String temporadaKey = (String) jComboBoxTemporada.getSelectedItem();

        long idProd = mapProductos.get(productoKey);
        long idTemp = mapTemporadas.get(temporadaKey);

        try {
            Connection con = Conexion.conectar();
            String sql = "UPDATE ProductoInfo.Producto_Temporada SET id_producto = ?, id_temporada = ? WHERE id_producto_temporada = ?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setLong(1, idProd);
            ps.setLong(2, idTemp);
            ps.setLong(3, selectedID);
            ps.executeUpdate();
            con.close();

            JOptionPane.showMessageDialog(null, "Vinculación actualizada");
            cargarTablaProductoTemporada();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al actualizar");
        }
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAgregarMouseClicked
        String productoKey = (String) jComboBoxProducto1.getSelectedItem();
        String temporadaKey = (String) jComboBoxTemporada.getSelectedItem();

        if (productoKey == null || temporadaKey == null) {
            JOptionPane.showMessageDialog(null, "Selecciona producto y temporada");
            return;
        }

        long idProd = mapProductos.get(productoKey);
        long idTemp = mapTemporadas.get(temporadaKey);

        try {
            Connection con = Conexion.conectar();
            String sql = "INSERT INTO ProductoInfo.Producto_Temporada (id_producto, id_temporada) VALUES (?, ?)";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setLong(1, idProd);
            ps.setLong(2, idTemp);
            ps.executeUpdate();
            con.close();

            JOptionPane.showMessageDialog(null, "Vinculación agregada correctamente");
            cargarTablaProductoTemporada();
        } catch (SQLIntegrityConstraintViolationException e) {
            JOptionPane.showMessageDialog(null, "Ya existe esa vinculación");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al insertar");
        }
    }//GEN-LAST:event_jButtonAgregarMouseClicked

    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarActionPerformed

    }//GEN-LAST:event_jButtonAgregarActionPerformed

    private void jComboBoxProducto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxProducto1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxProducto1ActionPerformed

    private void cargarProductos() {
        try {
            Connection con = Conexion.conectar();
            String sql = "SELECT id_producto, nombre_producto FROM ProductoInfo.Producto";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            jComboBoxProducto1.removeAllItems();
            mapProductos.clear();

            while (rs.next()) {
                long id = rs.getLong("id_producto");
                String display = id + " - " + rs.getString("nombre_producto");
                jComboBoxProducto1.addItem(display);
                mapProductos.put(display, id);
            }       
        jComboBoxProducto1.setSelectedIndex(-1);
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al cargar productos");
        }
    }

    private void cargarTemporadas() {
        try {
            Connection con = Conexion.conectar();
            String sql = "SELECT id_temporada, nombre, fecha_inicio, fecha_fin FROM ProductoInfo.Temporada";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            jComboBoxTemporada.removeAllItems();
            mapTemporadas.clear();

            while (rs.next()) {
                long id = rs.getLong("id_temporada");
                Date fechaInicio = rs.getDate("fecha_inicio");
                Date fechaFin = rs.getDate("fecha_fin");

                String mesInicio = new java.text.SimpleDateFormat("MMMM", new java.util.Locale("es")).format(fechaInicio);
                String mesFin = new java.text.SimpleDateFormat("MMMM", new java.util.Locale("es")).format(fechaFin);

                String display = rs.getString("nombre") + " (" + mesInicio + " - " + mesFin + ")";
                jComboBoxTemporada.addItem(display);
                mapTemporadas.put(display, id);
            }
            jComboBoxTemporada.setSelectedIndex(-1);
            
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al cargar temporadas");
        }
    }

    private void cargarTablaProductoTemporada() {
        cargarProductos();
        cargarTemporadas();

        try {
            Connection con = Conexion.conectar();
            String sql = "SELECT pt.id_producto_temporada, "
                    + "p.id_producto, p.nombre_producto, "
                    + "t.id_temporada, t.nombre AS nombre_temporada, "
                    + "t.fecha_inicio, t.fecha_fin "
                    + "FROM ProductoInfo.Producto_Temporada pt "
                    + "JOIN ProductoInfo.Producto p ON pt.id_producto = p.id_producto "
                    + "JOIN ProductoInfo.Temporada t ON pt.id_temporada = t.id_temporada";

            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            DefaultTableModel model = (DefaultTableModel) TableTemporada.getModel();
            model.setRowCount(0);

            SimpleDateFormat formatoMes = new SimpleDateFormat("MMMM", new Locale("es", "ES"));

            while (rs.next()) {
                long idRelacion = rs.getLong("id_producto_temporada");
                long idProducto = rs.getLong("id_producto");
                String nombreProducto = rs.getString("nombre_producto");

                long idTemporada = rs.getLong("id_temporada");
                String nombreTemporada = rs.getString("nombre_temporada");

                Date fechaInicio = rs.getDate("fecha_inicio");
                Date fechaFin = rs.getDate("fecha_fin");

                String mesInicio = formatoMes.format(fechaInicio);
                String mesFin = formatoMes.format(fechaFin);

                // Capitalizar primera letra
                mesInicio = mesInicio.substring(0, 1).toUpperCase() + mesInicio.substring(1);
                mesFin = mesFin.substring(0, 1).toUpperCase() + mesFin.substring(1);

                String productoDisplay = idProducto + " - " + nombreProducto;
                String temporadaDisplay = nombreTemporada + " (" + mesInicio + " - " + mesFin + ")";

                // Agregamos ID de producto y temporada como columnas ocultas
                model.addRow(new Object[]{idRelacion, idProducto, idTemporada, productoDisplay, temporadaDisplay});
            }

            con.close();

            // Ocultar columnas de IDs intermedios
            TableTemporada.getColumnModel().getColumn(1).setMinWidth(0);
            TableTemporada.getColumnModel().getColumn(1).setMaxWidth(0);
            TableTemporada.getColumnModel().getColumn(1).setWidth(0);

            TableTemporada.getColumnModel().getColumn(2).setMinWidth(0);
            TableTemporada.getColumnModel().getColumn(2).setMaxWidth(0);
            TableTemporada.getColumnModel().getColumn(2).setWidth(0);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al cargar tabla Producto-Temporada\n" + e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Producto_Temporada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Producto_Temporada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Producto_Temporada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Producto_Temporada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Producto_Temporada().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableTemporada;
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JComboBox<String> jComboBoxProducto1;
    private javax.swing.JComboBox<String> jComboBoxTemporada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
